{"version":3,"sources":["webpack:///webpack/bootstrap 4fa2f3e96b9d036794d7?369f*","webpack:///./tests/suite.js","webpack:///./src/eBus.js?732b*","webpack:///./src/models/event.js?932d*","webpack:///./src/models/listener.js?7215*","webpack:///./src/logger.js?1bf0*","webpack:///./src/utils.js?2ff8*","webpack:///./tests/listner_target_suite.js"],"names":["eBus","options","_eventListenerMap","Map","_eventTriggeredFlag","listenerPayload","listenerIdsList","Array","payloadObj","eventList","event","listenerObj","name","routine","context","push","has","get","set","log","listenerName","eventName","listenersList","updatedListnersList","listener","listenerUid","target","payload","executed","execute","apply","Event","validateConstructorParams","objUnderValidation","listenerSideEffectsRoutine","validationVerdict","error","Listener","listenerSideEffectRoutine","arguments","_listenerUid","_listenerSideEffectRoutine","_context","_executionCount","_executeOnce","once","_creationTimestamp","getCurrentTime","_target","_lastExecutionTimestamp","ErrorDisplay","message","Error","console","info","Date","getTime","EBusInstance","addListener","value","TestCaseSuite","query","result","group","count","testCase","trigger","groupEnd"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4fa2f3e96b9d036794d7\n **/","/**\n * Created by ankit.agrawal on 03/09/16.\n */\n\nimport ListenerTargetSuite from \"./listner_target_suite\";\n\n\n/** WEBPACK FOOTER **\n ** ./tests/suite.js\n **/","/**\n * eBus is a JavaScript Event Pub Sub Bus\n * - Entities can attach a listener to an event\n * - Entities can publish events\n * - Entities can listen to events that happened in the past\n */\n\nimport EventClass from './models/event';\nimport ListenerClass from './models/listener';\nimport Logger from './logger';\n\nclass eBus {\n    constructor(options) {\n        this._eventListenerMap = new Map();\n        this._eventTriggeredFlag = new Map();\n    }\n\n    /**\n     * Attaches a listener to the eBus\n     *\n     * @param listenerPayload {object} Payload which will be needed to attach a listener to the eBus\n     * listenerPayload : {\n     *      name : <string>[Required] Uniquely Identify's a listener, which could be used while removing the listener,\n     *      event : <Array>[Required] List of events which needs to be listened to,\n     *      routine : <function> [Required] Routine that needs to be executing on event trigger,\n     *      context : <object> [Optional] Context which can be passed on to the routine at the time of execution,\n     *      options : <object> [Optional]\n     * }\n     * options : {\n     *      once : <boolean> Makes the function to get executed only once on trigger,\n     *      rememberPast: <boolean>, [ Pending ]\n     *      throttle : <timestamp>, [ Pending ]\n     *      target : <string>\n     * }\n     *\n     * @return <Array> Returns an array of listenerId's\n     */\n    addListener(listenerPayload) {\n        let listenerIdsList = [];\n        if (!(listenerPayload instanceof Array)) {\n            listenerPayload = [listenerPayload];\n        }\n\n        for (let payloadObj of listenerPayload) {\n            let eventList = (payloadObj.event instanceof Array) ? payloadObj.event : [payloadObj.event];\n            let listenerObj = new ListenerClass(payloadObj.name, payloadObj.routine, payloadObj.context, payloadObj.options);\n            listenerIdsList.push(payloadObj.name);\n            for (let event of eventList) {\n                this._eventListenerMap.has(event) ? this._eventListenerMap.get(event).push(listenerObj) : this._eventListenerMap.set(event, [listenerObj]);\n                Logger.log(payloadObj.name, 'listener is attached with', event);\n            }\n        }\n        return listenerIdsList;\n    }\n\n    /**\n     * Removes a listeners from the eBus\n     *\n     * @param listenerName {string}[Required] Uuid of the listner attaching context who want's to remove this listener.\n     * @param eventName {string}[Required] Name of the event that need not to be listened any more.\n     */\n    removeListener(listenerName, eventName) {\n        let listenersList = this._eventListenerMap.get(eventName);\n        let updatedListnersList = [];\n\n        for (let listener of listenersList) {\n            if (listener.listenerUid != listenerName) {\n                updatedListnersList.push(listener);\n            }\n        }\n        this._eventListenerMap.set(eventName, updatedListnersList);\n    }\n\n    /**\n     * Triggers an event on the eBus making all the sideEffects to be executed for such event\n     *\n     * @param event {string} [Required] Name of the event that is published\n     * @param target {string} [Optional] The Uuid of the publisher who is publishing the event.\n     * @param payload {Array} [Optional] The payload that the event publisher would want to be passed to all the side effects.\n     */\n    trigger(event, target, ...payload) {\n        let listenersList = this._eventListenerMap.get(event);\n        this._eventTriggeredFlag.set(event, {executed: true, payload: payload});\n        for (let listener of listenersList) {\n            listener.execute.apply(listener, [target, payload]);\n        }\n    }\n}\n\nexport default eBus;\n\n\n/** WEBPACK FOOTER **\n ** ./src/eBus.js\n **/","class Event {\n    constructor() {\n\n    }\n}\n\nexport default Event;\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/event.js\n **/","import Logger from './../logger';\nimport Utils from '../utils';\n\nfunction validateConstructorParams(objUnderValidation) {\n    let listenerUid = objUnderValidation[0],\n        listenerSideEffectsRoutine = objUnderValidation[1],\n        validationVerdict = true;\n\n    if (!listenerUid) {\n        Logger.error('listenerUid is not found');\n        validationVerdict = false;\n    }\n\n    return validationVerdict;\n}\n\nclass Listener {\n\n    /**\n     *\n     * @param listenerUid\n     * @param listenerSideEffectRoutine\n     */\n    constructor(listenerUid, listenerSideEffectRoutine, context, options = {}) {\n        if (!validateConstructorParams(arguments)) {\n            return;\n        }\n\n        this._listenerUid = listenerUid;\n        this._listenerSideEffectRoutine = listenerSideEffectRoutine;\n        this._context = context;\n        this._executionCount = 0;\n        this._executeOnce = options.once ? true : false;\n        this._creationTimestamp = Utils.getCurrentTime();\n        this._target = options.target || void 0;\n        this._lastExecutionTimestamp = void 0;\n    }\n\n    /**\n     * Executes the listener side effect routine.\n     *\n     * @param target {string} represents the uuid of the entity publishing this event\n     * @param payload {object} The payload passed by the target which will be forwared to side effect routine\n     * as param\n     */\n    execute(target, payload) {\n        Logger.log(this._listenerUid + ' listener execution begins');\n        if(this._executeOnce && this._executionCount > 0) {\n            Logger.log(this._listenerUid , ' listener execution skipped..');\n            return void 0;\n        }\n\n        if(this._target!= void 0 && target != this._target){\n            Logger.log(this._listenerUid, ' listener execution skipped due to unmatching target');\n            return void 0;\n        }\n\n        this._lastExecutionTimestamp = Utils.getCurrentTime();\n        this._listenerSideEffectRoutine.apply(this._context, payload);\n        this._executionCount += 1;\n    }\n\n    /**\n     * Getter Function to retrieve UUid of the context which added the listener\n     *\n     * @returns {string} The UUid of the listener adding context\n     */\n    get listenerUid() {\n        return this._listenerUid;\n    }\n\n    /**\n     * Getter Function to retrieve the sideEffect routine attached by the context during listener creation.\n     *\n     * @returns {Function} Retruns the sideEffect routine attached by the context\n     */\n    get listenerSideEffectRoutine() {\n        return this._listenerSideEffectRoutine;\n    }\n\n}\n\nexport default Listener;\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/listener.js\n **/","class ErrorDisplay {\n    constructor() {};\n\n    error(message) {\n        throw(new Error(message));\n    }\n\n    info(message) {\n        console.info(message);\n    }\n\n    log() {\n        console.log.apply(console.log, arguments);\n    }\n}\n\nexport default (function(){\n    return new ErrorDisplay;\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger.js\n **/","export default {\n    getCurrentTime : () => {\n        return (new Date()).getTime();\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","/**\n * Created by ankit.agrawal on 27/08/16.\n */\n\nimport EBus from '../src/eBus';\n\nconst EBusInstance = new EBus();\n\nEBusInstance.addListener([{\n    name: '1',\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Listener 1');\n        payload.value += '1'\n    },\n    options: {\n        target: 'First_Publisher',\n        once: false\n    }\n}, {\n    name: '2',\n    event: 'First_Event',\n    routine: function (payload) {\n        console.log('Listener 2');\n        payload.value += '2'\n    },\n    options: {\n        target: 'Second_Publisher'\n    }\n}, {\n    name: '3',\n    event: 'Second_Event',\n    routine: function (payload) {\n        console.log('Listener 3');\n        payload.value += '3'\n    },\n    options: {\n        target: 'Second_Publisher'\n    }\n}, {\n    name: '2',\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Listener 4', payload.name);\n        payload.value += '4'\n    },\n    options: {}\n}]);\n\n\nlet TestCaseSuite = [\n    /**\n     * Expected Output\n     * Listener 1\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', 'First_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '14'\n    },\n    /**\n     * Expected Output\n     * Listener 2\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', 'Second_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '24'\n    },\n    /**\n     * Expected Output\n     * Listener 1\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', 'First_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '14'\n    },\n    /**\n     * Expected Output\n     * Listener 3\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', 'Second_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '34'\n    },\n    /**\n     * Expected Output\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', void 0, {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '4'\n    },\n    /**\n     * Expected Output\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', void 0, {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '4'\n    }\n\n];\n\nconsole.group('Listener Target Suite');\nlet count = 0;\nfor (let testCase of TestCaseSuite) {\n    let payload = testCase.query[2],\n        result = testCase.result;\n\n    payload.value = '';\n    console.group('Test', ++count);\n    EBusInstance.trigger.apply(EBusInstance, testCase.query);\n    if (payload.value === result) {\n        console.info(\"Test Passed\");\n    } else {\n        console.info(\"Test Failed\")\n    }\n    console.groupEnd();\n}\nconsole.groupEnd();\n\n\n\n/** WEBPACK FOOTER **\n ** ./tests/listner_target_suite.js\n **/"],"sourceRoot":""}