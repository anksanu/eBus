{"version":3,"sources":["webpack:///test.min.js","webpack:///webpack/bootstrap 8e8e6eeea59d7f43a3bd?5c94*","webpack:///./tests/suite.js","webpack:///./src/eBus.js?732b*","webpack:///./src/models/event.js?932d*","webpack:///./src/utils.js?2ff8*","webpack:///./src/models/listener.js?7215*","webpack:///./src/logger.js?1bf0*","webpack:///./tests/listner_target_suite.js","webpack:///./tests/listener_past_events_suite.js","webpack:///./tests/listener_throttle_events_suite.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_listner_target_suite","_listener_past_events_suite","_listener_throttle_events_suite","_classCallCheck","instance","Constructor","TypeError","executeListenerRoutine","listener","target","payload","execute","apply","Object","defineProperty","value","_createClass","defineProperties","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_event","_utils","_utils2","_listener","_listener2","_logger","_logger2","eBus","options","this","_eventListenerMap","Map","_eventTriggeredMap","listenerPayload","listenerIdsList","Array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","payloadObj","name","guid","eventList","event","listenerObj","routine","context","isListenToPastEvents","rememberPast","push","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","has","get","set","log","isEventTriggeredInPast","lastEventPayload","err","listenerName","eventName","listenersList","updatedListnersList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","listenerUid","_len","arguments","_key","executed","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","eventKeys","keys","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","listeners","tempObj","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","Event","getCurrentTime","Date","getTime","s4","Math","floor","random","toString","substring","Listener","listenerSideEffectRoutine","constructor","validateConstructorParams","_listenerUid","_listenerSideEffectRoutine","_context","_executionCount","_executeOnce","once","_creationTimestamp","_target","_lastExecutionTimestamp","_throttleTimestamp","throttle","objUnderValidation","validationVerdict","error","currentTime","timePostLastExecution","ErrorDisplay","message","Error","console","info","_eBus","_eBus2","EBusInstance","addListener","TestCaseSuite","query","result","group","count","testCase","trigger","groupEnd","matchString","setTimeout"],"mappings":"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","file":"test.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _listner_target_suite = __webpack_require__(6);\n\t\n\tvar _listner_target_suite2 = _interopRequireDefault(_listner_target_suite);\n\t\n\tvar _listener_past_events_suite = __webpack_require__(7);\n\t\n\tvar _listener_past_events_suite2 = _interopRequireDefault(_listener_past_events_suite);\n\t\n\tvar _listener_throttle_events_suite = __webpack_require__(8);\n\t\n\tvar _listener_throttle_events_suite2 = _interopRequireDefault(_listener_throttle_events_suite);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\teBus is a JavaScript Event Pub Sub Bus\n\tntities can attach a listener to an event ( Complete )\n\tntities can publish events ( Complete )\n\tntities can listen to events that happened in the past ( Complete )\n\tntities can add throttling to listeners execution ( Complete )\n\throtlling also throttles in case the events are pushed in a list during add listener\n\tn such case throttling effect both the events\n\tupports Grouping of events ( ?? )\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\t\n\tvar _event = __webpack_require__(2);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _listener = __webpack_require__(4);\n\t\n\tvar _listener2 = _interopRequireDefault(_listener);\n\t\n\tvar _logger = __webpack_require__(5);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction executeListenerRoutine(listener, target, payload) {\n\t    listener.execute.apply(listener, [target, payload]);\n\t}\n\t\n\tvar eBus = function () {\n\t    function eBus(options) {\n\t        _classCallCheck(this, eBus);\n\t\n\t        this._eventListenerMap = new Map();\n\t        this._eventTriggeredMap = new Map();\n\t    }\n\t\n\t    /**\n\t     * Attaches a listener to the eBus\n\t     *\n\t     * @param listenerPayload {object} Payload which will be needed to attach a listener to the eBus\n\t     * listenerPayload : {\n\t     *      name : <string>[Required] Uniquely Identify's a listener, which could be used while removing the listener,\n\t     *      event : <Array>[Required] List of events which needs to be listened to,\n\t     *      routine : <function> [Required] Routine that needs to be executing on event trigger,\n\t     *      context : <object> [Optional] Context which can be passed on to the routine at the time of execution,\n\t     *      options : <object> [Optional]\n\t     * }\n\t     * options : {\n\t     *      once : <boolean> Makes the function to get executed only once on trigger,\n\t     *      rememberPast: <boolean>,\n\t     *      throttle : <timestamp>,\n\t     *      target : <string>\n\t     * }\n\t     *\n\t     * @return <Array> Returns an array of listenerId's\n\t     */\n\t\n\t\n\t    _createClass(eBus, [{\n\t        key: 'addListener',\n\t        value: function addListener(listenerPayload) {\n\t            var listenerIdsList = [];\n\t            if (!(listenerPayload instanceof Array)) {\n\t                listenerPayload = [listenerPayload];\n\t            }\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = listenerPayload[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var payloadObj = _step.value;\n\t\n\t                    payloadObj.name = payloadObj.name || _utils2.default.guid();\n\t                    var eventList = payloadObj.event instanceof Array ? payloadObj.event : [payloadObj.event],\n\t                        listenerObj = new _listener2.default(payloadObj.name, payloadObj.routine, payloadObj.context, payloadObj.options),\n\t                        isListenToPastEvents = payloadObj.options && payloadObj.options.rememberPast || false;\n\t\n\t                    listenerIdsList.push(payloadObj.name);\n\t\n\t                    var _iteratorNormalCompletion2 = true;\n\t                    var _didIteratorError2 = false;\n\t                    var _iteratorError2 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator2 = eventList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                            var event = _step2.value;\n\t\n\t                            this._eventListenerMap.has(event) ? this._eventListenerMap.get(event).push(listenerObj) : this._eventListenerMap.set(event, [listenerObj]);\n\t                            _logger2.default.log(payloadObj.name, 'listener is attached with', event);\n\t\n\t                            /**\n\t                             * Executing the listener routine in case the listener wants to listen to events that happened in the past\n\t                             */\n\t                            if (isListenToPastEvents) {\n\t                                var isEventTriggeredInPast = this._eventTriggeredMap.has(event) ? true : false,\n\t                                    lastEventPayload = isEventTriggeredInPast ? this._eventTriggeredMap.get(event) : void 0;\n\t\n\t                                isEventTriggeredInPast ? executeListenerRoutine(listenerObj, lastEventPayload.target, lastEventPayload.payload) : void 0;\n\t                            }\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError2 = true;\n\t                        _iteratorError2 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                                _iterator2.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError2) {\n\t                                throw _iteratorError2;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return listenerIdsList;\n\t        }\n\t\n\t        /**\n\t         * Removes a listeners from the eBus\n\t         *\n\t         * @param listenerName {string}[Required] Uuid of the listner attaching context who want's to remove this listener.\n\t         * @param eventName {string}[Required] Name of the event that need not to be listened any more.\n\t         */\n\t\n\t    }, {\n\t        key: 'removeListener',\n\t        value: function removeListener(listenerName, eventName) {\n\t            var listenersList = this._eventListenerMap.get(eventName) || [];\n\t            var updatedListnersList = [];\n\t\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = listenersList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var listener = _step3.value;\n\t\n\t                    if (listener.listenerUid != listenerName) {\n\t                        updatedListnersList.push(listener);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._eventListenerMap.set(eventName, updatedListnersList);\n\t        }\n\t\n\t        /**\n\t         * Triggers an event on the eBus making all the sideEffects to be executed for such event\n\t         *\n\t         * @param event {string} [Required] Name of the event that is published\n\t         * @param target {string} [Optional] The Uuid of the publisher who is publishing the event.\n\t         * @param payload {Array} [Optional] The payload that the event publisher would want to be passed to all the side effects.\n\t         */\n\t\n\t    }, {\n\t        key: 'trigger',\n\t        value: function trigger(event, target) {\n\t            for (var _len = arguments.length, payload = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t                payload[_key - 2] = arguments[_key];\n\t            }\n\t\n\t            var listenersList = this._eventListenerMap.get(event) || [];\n\t            this._eventTriggeredMap.set(event, { executed: true, payload: payload, target: target });\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = listenersList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var listener = _step4.value;\n\t\n\t                    // listener.execute.apply(listener, [target, payload]);\n\t                    executeListenerRoutine(listener, target, payload);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * @return [Array] returns the list of the Events and mapped listeners name\n\t         */\n\t\n\t    }, {\n\t        key: 'getEvents',\n\t        value: function getEvents() {\n\t            var eventList = [],\n\t                eventKeys = this._eventListenerMap.keys();\n\t\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = eventKeys[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var event = _step5.value;\n\t\n\t                    var listeners = this._eventListenerMap.get(event),\n\t                        tempObj = {\n\t                        event: event,\n\t                        listener: []\n\t                    };\n\t                    var _iteratorNormalCompletion6 = true;\n\t                    var _didIteratorError6 = false;\n\t                    var _iteratorError6 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator6 = listeners[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                            var listener = _step6.value;\n\t\n\t                            tempObj.listener.push(listener.listenerUid);\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError6 = true;\n\t                        _iteratorError6 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                                _iterator6.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError6) {\n\t                                throw _iteratorError6;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    eventList.push(tempObj);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return eventList;\n\t        }\n\t    }]);\n\t\n\t    return eBus;\n\t}();\n\t\n\texports.default = eBus;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Event = function Event() {\n\t    _classCallCheck(this, Event);\n\t};\n\t\n\texports.default = Event;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    getCurrentTime: function getCurrentTime() {\n\t        return new Date().getTime();\n\t    },\n\t    guid: function guid() {\n\t        function s4() {\n\t            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t        }\n\t        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t    }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _logger = __webpack_require__(5);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Class : Listener\n\t */\n\tvar Listener = function () {\n\t    _createClass(Listener, null, [{\n\t        key: 'validateConstructorParams',\n\t\n\t\n\t        /**\n\t         * Validates the constructor arguments\n\t         *\n\t         * @param objUnderValidation - Constructor arguments during this class Object creation\n\t         * @returns {boolean} - Validation verdict\n\t         */\n\t        value: function validateConstructorParams(objUnderValidation) {\n\t            var listenerUid = objUnderValidation[0],\n\t                listenerSideEffectsRoutine = objUnderValidation[1],\n\t                validationVerdict = true;\n\t\n\t            if (!listenerUid) {\n\t                _logger2.default.error('listenerUid is not found');\n\t                validationVerdict = false;\n\t            }\n\t\n\t            return validationVerdict;\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param listenerUid\n\t         * @param listenerSideEffectRoutine\n\t         */\n\t\n\t    }]);\n\t\n\t    function Listener(listenerUid, listenerSideEffectRoutine, context) {\n\t        var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t        _classCallCheck(this, Listener);\n\t\n\t        if (!this.constructor.validateConstructorParams(arguments)) {\n\t            return;\n\t        }\n\t\n\t        this._listenerUid = listenerUid;\n\t        this._listenerSideEffectRoutine = listenerSideEffectRoutine;\n\t        this._context = context;\n\t        this._executionCount = 0;\n\t        this._executeOnce = options.once ? true : false;\n\t        this._creationTimestamp = _utils2.default.getCurrentTime();\n\t        this._target = options.target || void 0;\n\t        this._lastExecutionTimestamp = void 0;\n\t        this._throttleTimestamp = options.throttle || 0;\n\t    }\n\t\n\t    /**\n\t     * Executes the listener side effect routine.\n\t     *\n\t     * @param target {string} represents the uuid of the entity publishing this event\n\t     * @param payload {object} The payload passed by the target which will be forwared to side effect routine\n\t     * as param\n\t     */\n\t\n\t\n\t    _createClass(Listener, [{\n\t        key: 'execute',\n\t        value: function execute(target, payload) {\n\t            _logger2.default.log(this._listenerUid + ' listener execution begins');\n\t            if (this._executeOnce && this._executionCount > 0) {\n\t                _logger2.default.log(this._listenerUid, 'listener execution skipped.. due to once flag');\n\t                return void 0;\n\t            }\n\t\n\t            var currentTime = _utils2.default.getCurrentTime(),\n\t                timePostLastExecution = currentTime - this._lastExecutionTimestamp;\n\t\n\t            if (this._lastExecutionTimestamp && timePostLastExecution <= this._throttleTimestamp) {\n\t                _logger2.default.log(this._listenerUid, 'listener execution skipped.. due to enforced throttle');\n\t                return void 0;\n\t            }\n\t\n\t            if (this._target != void 0 && target != this._target) {\n\t                _logger2.default.log(this._listenerUid, ' listener execution skipped due to unmatching target');\n\t                return void 0;\n\t            }\n\t\n\t            this._lastExecutionTimestamp = _utils2.default.getCurrentTime();\n\t            this._listenerSideEffectRoutine.apply(this._context, payload);\n\t            this._executionCount += 1;\n\t        }\n\t\n\t        /**\n\t         * Getter Function to retrieve UUid of the context which added the listener\n\t         *\n\t         * @returns {string} The UUid of the listener adding context\n\t         */\n\t\n\t    }, {\n\t        key: 'listenerUid',\n\t        get: function get() {\n\t            return this._listenerUid;\n\t        }\n\t\n\t        /**\n\t         * Getter Function to retrieve the sideEffect routine attached by the context during listener creation.\n\t         *\n\t         * @returns {Function} Retruns the sideEffect routine attached by the context\n\t         */\n\t\n\t    }, {\n\t        key: 'listenerSideEffectRoutine',\n\t        get: function get() {\n\t            return this._listenerSideEffectRoutine;\n\t        }\n\t    }]);\n\t\n\t    return Listener;\n\t}();\n\t\n\texports.default = Listener;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ErrorDisplay = function () {\n\t    function ErrorDisplay() {\n\t        _classCallCheck(this, ErrorDisplay);\n\t    }\n\t\n\t    _createClass(ErrorDisplay, [{\n\t        key: \"error\",\n\t        value: function error(message) {\n\t            throw new Error(message);\n\t        }\n\t    }, {\n\t        key: \"info\",\n\t        value: function info(message) {\n\t            console.info(message);\n\t        }\n\t    }, {\n\t        key: \"log\",\n\t        value: function log() {\n\t            console.log.apply(console.log, arguments);\n\t        }\n\t    }]);\n\t\n\t    return ErrorDisplay;\n\t}();\n\t\n\texports.default = function () {\n\t    return new ErrorDisplay();\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _eBus = __webpack_require__(1);\n\t\n\tvar _eBus2 = _interopRequireDefault(_eBus);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar EBusInstance = new _eBus2.default(); /**\n\t                                          * Created by ankit.agrawal on 27/08/16.\n\t                                          */\n\t\n\tEBusInstance.addListener([{\n\t    name: void 0,\n\t    event: ['First_Event', 'Second_Event'],\n\t    routine: function routine(payload) {\n\t        console.log('Listener 1');\n\t        payload.value += '1';\n\t    },\n\t    options: {\n\t        target: 'First_Publisher',\n\t        once: false\n\t    }\n\t}, {\n\t    name: void 0,\n\t    event: 'First_Event',\n\t    routine: function routine(payload) {\n\t        console.log('Listener 2');\n\t        payload.value += '2';\n\t    },\n\t    options: {\n\t        target: 'Second_Publisher'\n\t    }\n\t}, {\n\t    name: '3',\n\t    event: 'Second_Event',\n\t    routine: function routine(payload) {\n\t        console.log('Listener 3');\n\t        payload.value += '3';\n\t    },\n\t    options: {\n\t        target: 'Second_Publisher'\n\t    }\n\t}, {\n\t    name: '2',\n\t    event: ['First_Event', 'Second_Event'],\n\t    routine: function routine(payload) {\n\t        console.log('Listener 4', payload.name);\n\t        payload.value += '4';\n\t    },\n\t    options: {}\n\t}]);\n\t\n\tvar TestCaseSuite = [\n\t/**\n\t * Expected Output\n\t * Listener 1\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['First_Event', 'First_Publisher', {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '14'\n\t},\n\t/**\n\t * Expected Output\n\t * Listener 2\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['First_Event', 'Second_Publisher', {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '24'\n\t},\n\t/**\n\t * Expected Output\n\t * Listener 1\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['Second_Event', 'First_Publisher', {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '14'\n\t},\n\t/**\n\t * Expected Output\n\t * Listener 3\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['Second_Event', 'Second_Publisher', {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '34'\n\t},\n\t/**\n\t * Expected Output\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['First_Event', void 0, {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '4'\n\t},\n\t/**\n\t * Expected Output\n\t * Listener 4 eBus\n\t */\n\t{\n\t    query: ['Second_Event', void 0, {\n\t        name: 'eBus',\n\t        value: ''\n\t    }],\n\t    result: '4'\n\t}];\n\t\n\tconsole.group('Listener Target Suite');\n\tvar count = 0;\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\t\n\ttry {\n\t    for (var _iterator = TestCaseSuite[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var testCase = _step.value;\n\t\n\t        var payload = testCase.query[2],\n\t            result = testCase.result;\n\t\n\t        payload.value = '';\n\t        console.group('Test', ++count);\n\t        EBusInstance.trigger.apply(EBusInstance, testCase.query);\n\t        if (payload.value === result) {\n\t            console.info(\"Test Passed\");\n\t        } else {\n\t            console.error(\"Test Failed\");\n\t        }\n\t        console.groupEnd();\n\t    }\n\t} catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t} finally {\n\t    try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t        }\n\t    } finally {\n\t        if (_didIteratorError) {\n\t            throw _iteratorError;\n\t        }\n\t    }\n\t}\n\t\n\tconsole.groupEnd();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _eBus = __webpack_require__(1);\n\t\n\tvar _eBus2 = _interopRequireDefault(_eBus);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar EBusInstance = new _eBus2.default(); /**\n\t                                          * Created by ankit.agrawal on 27/08/16.\n\t                                          */\n\t\n\tconsole.group('Listener Past Events Suite');\n\t\n\tvar matchString = '';\n\tvar result = '11';\n\t\n\tEBusInstance.trigger('First_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\tEBusInstance.trigger('Second_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\t\n\tEBusInstance.addListener([{\n\t    name: '1',\n\t    event: ['First_Event', 'Second_Event'],\n\t    routine: function routine(payload) {\n\t        console.log('Raised Condition');\n\t        matchString += '1';\n\t    },\n\t    options: {\n\t        target: 'First_Publisher',\n\t        once: false,\n\t        rememberPast: true\n\t    }\n\t}]);\n\t\n\tsetTimeout(function () {\n\t    if (matchString == result) {\n\t        console.info('Test Passed');\n\t    } else {\n\t        console.error('Test Failed');\n\t    }\n\t    console.groupEnd();\n\t}, 2000);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _eBus = __webpack_require__(1);\n\t\n\tvar _eBus2 = _interopRequireDefault(_eBus);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar EBusInstance = new _eBus2.default(); /**\n\t                                          * Created by ankit.agrawal on 10/09/16.\n\t                                          */\n\t\n\tconsole.group('Listener Throttle Events Suite');\n\t\n\tvar matchString = '';\n\tvar result = '11';\n\tEBusInstance.addListener([{\n\t    name: '1',\n\t    event: ['First_Event', 'Second_Event'],\n\t    routine: function routine(payload) {\n\t        console.log('Listener Executed');\n\t        matchString += payload.value;\n\t    },\n\t    options: {\n\t        throttle: 5000\n\t    }\n\t}]);\n\t\n\tEBusInstance.trigger('First_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\tEBusInstance.trigger('Second_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\t\n\tsetTimeout(function () {\n\t    EBusInstance.trigger('First_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\t}, 3000);\n\t\n\tsetTimeout(function () {\n\t    EBusInstance.trigger('First_Event', 'First_Publisher', { name: 'eBus', value: 1 });\n\t    if (matchString == result) {\n\t        console.info('Test Suite Passed');\n\t    } else {\n\t        console.error('Test Suite Failed');\n\t    }\n\t    console.groupEnd();\n\t}, 6000);\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** test.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8e8e6eeea59d7f43a3bd\n **/","/**\n * Created by ankit.agrawal on 03/09/16.\n */\n\nimport ListenerTargetSuite from \"./listner_target_suite\";\nimport ListenerPastEventsSuite from \"./listener_past_events_suite\";\nimport ListenerThrottleEventsSuite from \"./listener_throttle_events_suite\";\n\n\n/** WEBPACK FOOTER **\n ** ./tests/suite.js\n **/","/**\n * eBus is a JavaScript Event Pub Sub Bus\n * - Entities can attach a listener to an event ( Complete )\n * - Entities can publish events ( Complete )\n * - Entities can listen to events that happened in the past ( Complete )\n * - Entities can add throttling to listeners execution ( Complete )\n * -- Throtlling also throttles in case the events are pushed in a list during add listener\n * -- In such case throttling effect both the events\n * - Supports Grouping of events ( ?? )\n */\n\nimport EventClass from './models/event';\nimport Utils from './utils';\nimport ListenerClass from './models/listener';\nimport Logger from './logger';\n\nfunction executeListenerRoutine(listener, target, payload) {\n    listener.execute.apply(listener, [target, payload]);\n}\n\nclass eBus {\n    constructor(options) {\n        this._eventListenerMap = new Map();\n        this._eventTriggeredMap = new Map();\n    }\n\n    /**\n     * Attaches a listener to the eBus\n     *\n     * @param listenerPayload {object} Payload which will be needed to attach a listener to the eBus\n     * listenerPayload : {\n     *      name : <string>[Required] Uniquely Identify's a listener, which could be used while removing the listener,\n     *      event : <Array>[Required] List of events which needs to be listened to,\n     *      routine : <function> [Required] Routine that needs to be executing on event trigger,\n     *      context : <object> [Optional] Context which can be passed on to the routine at the time of execution,\n     *      options : <object> [Optional]\n     * }\n     * options : {\n     *      once : <boolean> Makes the function to get executed only once on trigger,\n     *      rememberPast: <boolean>,\n     *      throttle : <timestamp>,\n     *      target : <string>\n     * }\n     *\n     * @return <Array> Returns an array of listenerId's\n     */\n    addListener(listenerPayload) {\n        let listenerIdsList = [];\n        if (!(listenerPayload instanceof Array)) {\n            listenerPayload = [listenerPayload];\n        }\n\n        for (let payloadObj of listenerPayload) {\n            payloadObj.name = payloadObj.name || Utils.guid();\n            let eventList = (payloadObj.event instanceof Array) ? payloadObj.event : [payloadObj.event],\n                listenerObj = new ListenerClass(payloadObj.name, payloadObj.routine, payloadObj.context, payloadObj.options),\n                isListenToPastEvents = (payloadObj.options && payloadObj.options.rememberPast) || false;\n\n            listenerIdsList.push(payloadObj.name);\n\n            for (let event of eventList) {\n                this._eventListenerMap.has(event) ? this._eventListenerMap.get(event).push(listenerObj) : this._eventListenerMap.set(event, [listenerObj]);\n                Logger.log(payloadObj.name, 'listener is attached with', event);\n\n                /**\n                 * Executing the listener routine in case the listener wants to listen to events that happened in the past\n                 */\n                if (isListenToPastEvents) {\n                    let isEventTriggeredInPast = this._eventTriggeredMap.has(event) ? true : false,\n                        lastEventPayload = isEventTriggeredInPast ? this._eventTriggeredMap.get(event) : void 0;\n\n                    isEventTriggeredInPast ? executeListenerRoutine(listenerObj, lastEventPayload.target, lastEventPayload.payload) : void 0;\n                }\n            }\n        }\n        return listenerIdsList;\n    }\n\n    /**\n     * Removes a listeners from the eBus\n     *\n     * @param listenerName {string}[Required] Uuid of the listner attaching context who want's to remove this listener.\n     * @param eventName {string}[Required] Name of the event that need not to be listened any more.\n     */\n    removeListener(listenerName, eventName) {\n        let listenersList = this._eventListenerMap.get(eventName) || [];\n        let updatedListnersList = [];\n\n        for (let listener of listenersList) {\n            if (listener.listenerUid != listenerName) {\n                updatedListnersList.push(listener);\n            }\n        }\n        this._eventListenerMap.set(eventName, updatedListnersList);\n    }\n\n    /**\n     * Triggers an event on the eBus making all the sideEffects to be executed for such event\n     *\n     * @param event {string} [Required] Name of the event that is published\n     * @param target {string} [Optional] The Uuid of the publisher who is publishing the event.\n     * @param payload {Array} [Optional] The payload that the event publisher would want to be passed to all the side effects.\n     */\n    trigger(event, target, ...payload) {\n        let listenersList = this._eventListenerMap.get(event) || [];\n        this._eventTriggeredMap.set(event, {executed: true, payload: payload, target: target});\n        for (let listener of listenersList) {\n            // listener.execute.apply(listener, [target, payload]);\n            executeListenerRoutine(listener, target, payload);\n        }\n    }\n\n    /**\n     * @return [Array] returns the list of the Events and mapped listeners name\n     */\n    getEvents() {\n        let eventList = [],\n            eventKeys = this._eventListenerMap.keys();\n\n        for (let event of eventKeys) {\n            let listeners = this._eventListenerMap.get(event),\n                tempObj = {\n                    event: event,\n                    listener: []\n                };\n            for (let listener of listeners) {\n                tempObj.listener.push(listener.listenerUid);\n            }\n\n            eventList.push(tempObj);\n        }\n\n        return eventList;\n    }\n}\n\nexport default eBus;\n\n\n/** WEBPACK FOOTER **\n ** ./src/eBus.js\n **/","class Event {\n    constructor() {\n\n    }\n}\n\nexport default Event;\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/event.js\n **/","export default {\n    getCurrentTime: () => {\n        return (new Date()).getTime();\n    },\n    guid: ()=> {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","import Logger from './../logger';\nimport Utils from '../utils';\n\n/**\n * Class : Listener\n */\nclass Listener {\n\n    /**\n     * Validates the constructor arguments\n     *\n     * @param objUnderValidation - Constructor arguments during this class Object creation\n     * @returns {boolean} - Validation verdict\n     */\n    static validateConstructorParams(objUnderValidation) {\n        let listenerUid = objUnderValidation[0],\n            listenerSideEffectsRoutine = objUnderValidation[1],\n            validationVerdict = true;\n\n        if (!listenerUid) {\n            Logger.error('listenerUid is not found');\n            validationVerdict = false;\n        }\n\n        return validationVerdict;\n    }\n\n    /**\n     *\n     * @param listenerUid\n     * @param listenerSideEffectRoutine\n     */\n    constructor(listenerUid, listenerSideEffectRoutine, context, options = {}) {\n        if (!this.constructor.validateConstructorParams(arguments)) {\n            return;\n        }\n\n        this._listenerUid = listenerUid;\n        this._listenerSideEffectRoutine = listenerSideEffectRoutine;\n        this._context = context;\n        this._executionCount = 0;\n        this._executeOnce = options.once ? true : false;\n        this._creationTimestamp = Utils.getCurrentTime();\n        this._target = options.target || void 0;\n        this._lastExecutionTimestamp = void 0;\n        this._throttleTimestamp = options.throttle || 0;\n    }\n\n    /**\n     * Executes the listener side effect routine.\n     *\n     * @param target {string} represents the uuid of the entity publishing this event\n     * @param payload {object} The payload passed by the target which will be forwared to side effect routine\n     * as param\n     */\n    execute(target, payload) {\n        Logger.log(this._listenerUid + ' listener execution begins');\n        if (this._executeOnce && this._executionCount > 0) {\n            Logger.log(this._listenerUid, 'listener execution skipped.. due to once flag');\n            return void 0;\n        }\n\n        let currentTime = Utils.getCurrentTime(),\n            timePostLastExecution = currentTime - this._lastExecutionTimestamp;\n\n        if (this._lastExecutionTimestamp && timePostLastExecution <= this._throttleTimestamp) {\n            Logger.log(this._listenerUid, 'listener execution skipped.. due to enforced throttle');\n            return void 0;\n        }\n\n        if (this._target != void 0 && target != this._target) {\n            Logger.log(this._listenerUid, ' listener execution skipped due to unmatching target');\n            return void 0;\n        }\n\n        this._lastExecutionTimestamp = Utils.getCurrentTime();\n        this._listenerSideEffectRoutine.apply(this._context, payload);\n        this._executionCount += 1;\n    }\n\n    /**\n     * Getter Function to retrieve UUid of the context which added the listener\n     *\n     * @returns {string} The UUid of the listener adding context\n     */\n    get listenerUid() {\n        return this._listenerUid;\n    }\n\n    /**\n     * Getter Function to retrieve the sideEffect routine attached by the context during listener creation.\n     *\n     * @returns {Function} Retruns the sideEffect routine attached by the context\n     */\n    get listenerSideEffectRoutine() {\n        return this._listenerSideEffectRoutine;\n    }\n\n}\n\nexport default Listener;\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/listener.js\n **/","class ErrorDisplay {\n    constructor() {};\n\n    error(message) {\n        throw(new Error(message));\n    }\n\n    info(message) {\n        console.info(message);\n    }\n\n    log() {\n        console.log.apply(console.log, arguments);\n    }\n}\n\nexport default (function(){\n    return new ErrorDisplay;\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger.js\n **/","/**\n * Created by ankit.agrawal on 27/08/16.\n */\n\nimport EBus from '../src/eBus';\n\nconst EBusInstance = new EBus();\n\nEBusInstance.addListener([{\n    name: void 0,\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Listener 1');\n        payload.value += '1'\n    },\n    options: {\n        target: 'First_Publisher',\n        once: false\n    }\n}, {\n    name: void 0,\n    event: 'First_Event',\n    routine: function (payload) {\n        console.log('Listener 2');\n        payload.value += '2'\n    },\n    options: {\n        target: 'Second_Publisher'\n    }\n}, {\n    name: '3',\n    event: 'Second_Event',\n    routine: function (payload) {\n        console.log('Listener 3');\n        payload.value += '3'\n    },\n    options: {\n        target: 'Second_Publisher'\n    }\n}, {\n    name: '2',\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Listener 4', payload.name);\n        payload.value += '4'\n    },\n    options: {}\n}]);\n\n\nlet TestCaseSuite = [\n    /**\n     * Expected Output\n     * Listener 1\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', 'First_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '14'\n    },\n    /**\n     * Expected Output\n     * Listener 2\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', 'Second_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '24'\n    },\n    /**\n     * Expected Output\n     * Listener 1\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', 'First_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '14'\n    },\n    /**\n     * Expected Output\n     * Listener 3\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', 'Second_Publisher', {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '34'\n    },\n    /**\n     * Expected Output\n     * Listener 4 eBus\n     */\n    {\n        query: ['First_Event', void 0, {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '4'\n    },\n    /**\n     * Expected Output\n     * Listener 4 eBus\n     */\n    {\n        query: ['Second_Event', void 0, {\n            name: 'eBus',\n            value: ''\n        }],\n        result: '4'\n    }\n\n];\n\nconsole.group('Listener Target Suite');\nlet count = 0;\nfor (let testCase of TestCaseSuite) {\n    let payload = testCase.query[2],\n        result = testCase.result;\n\n    payload.value = '';\n    console.group('Test', ++count);\n    EBusInstance.trigger.apply(EBusInstance, testCase.query);\n    if (payload.value === result) {\n        console.info(\"Test Passed\");\n    } else {\n        console.error(\"Test Failed\")\n    }\n    console.groupEnd();\n}\nconsole.groupEnd();\n\n\n/** WEBPACK FOOTER **\n ** ./tests/listner_target_suite.js\n **/","/**\n * Created by ankit.agrawal on 27/08/16.\n */\n\nimport EBus from '../src/eBus';\n\nconst EBusInstance = new EBus();\nconsole.group('Listener Past Events Suite');\n\n\nlet matchString = '';\nlet result = '11';\n\nEBusInstance.trigger('First_Event', 'First_Publisher', {name : 'eBus', value : 1});\nEBusInstance.trigger('Second_Event', 'First_Publisher', {name : 'eBus', value : 1});\n\nEBusInstance.addListener([{\n    name: '1',\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Raised Condition');\n        matchString += '1'\n    },\n    options: {\n        target: 'First_Publisher',\n        once: false,\n        rememberPast : true\n    }\n}]);\n\nsetTimeout(()=> {\n    if(matchString == result){\n        console.info('Test Passed');\n    } else {\n        console.error('Test Failed');\n    }\n    console.groupEnd();\n},2000);\n\n\n\n/** WEBPACK FOOTER **\n ** ./tests/listener_past_events_suite.js\n **/","/**\n * Created by ankit.agrawal on 10/09/16.\n */\n\n\nimport EBus from '../src/eBus';\n\nconst EBusInstance = new EBus();\nconsole.group('Listener Throttle Events Suite');\n\nlet matchString = '';\nlet result = '11';\nEBusInstance.addListener([{\n    name: '1',\n    event: ['First_Event', 'Second_Event'],\n    routine: function (payload) {\n        console.log('Listener Executed');\n        matchString +=  payload.value;\n    },\n    options: {\n        throttle: 5000\n    }\n}]);\n\nEBusInstance.trigger('First_Event', 'First_Publisher', {name : 'eBus', value : 1});\nEBusInstance.trigger('Second_Event', 'First_Publisher', {name : 'eBus', value : 1});\n\nsetTimeout(()=> {\n    EBusInstance.trigger('First_Event', 'First_Publisher', {name : 'eBus', value : 1});\n},3000);\n\n\nsetTimeout(()=> {\n    EBusInstance.trigger('First_Event', 'First_Publisher', {name : 'eBus', value : 1});\n    if(matchString == result){\n        console.info('Test Suite Passed');\n    } else {\n        console.error('Test Suite Failed');\n    }\n    console.groupEnd();\n},6000);\n\n\n\n/** WEBPACK FOOTER **\n ** ./tests/listener_throttle_events_suite.js\n **/"],"sourceRoot":""}